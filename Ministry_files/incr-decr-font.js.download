 var date = new Date();
    var current_date = date.getDate()+"-"+(date.getMonth()+1)+"-"+ date.getFullYear();
    document.getElementById("p1").innerHTML = current_date;
 


  var text_increace=0;
      var text_decrease=0;
      var $affectedElements = $("P,a,li p,pb-3 abotP,h4,h5,h6,li a,.cs-find-search h6,.wp-smartstudy .cs-find-search h6,.cs-label-area label,strong,span,.list_icon li,.tab .nav-tabs li a, span, table, .copyright-text,div.container"); // Can be extended, ex. $("div, p, span.someClass")
  
         // Storing the original size in a data attribute so size can be reset
      $affectedElements.each( function(){
       
        var $this = $(this);
        $this.data("orig-size", $this.css("font-size") );
      });
   
      $("#incfont").click(function(){
         text_increace++;
         changeFontSize(1);
      })
   
      $("#decfont").click(function(){
        text_decrease++;
        changeFontSize(-1);
      })
   
      $("#normal").click(function(){
        $affectedElements.each( function(){
          var $this = $(this);
          text_increace=0;
          text_decrease=0;
          $this.css( "font-size" , $this.data("orig-size") );
        });
      })
   
      function changeFontSize(direction){
        $affectedElements.each( function(){
          var $this = $(this);
        if(direction==1)
        {
          if(text_increace<=2)
          {
            $this.css( "font-size" , parseInt($this.css("font-size"))+direction );
          }
        }
        if(direction==-1)
        {
          if(text_decrease<=2)
          {
            $this.css( "font-size" , parseInt($this.css("font-size"))+direction );
          }
        }
        });
      }
    
    
    
    $("input, label, textarea, form, iframe, h6, h5, h4, h3, h2, h1, p, select, img, .analytics li, .brands_nav,.abotP").attr("tabindex", "0");